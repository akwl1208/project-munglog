<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.inyo.munglog.dao.GoodsDAO">
	
	<!-- select ************************************************************************************************ -->
	<!-- cri로 굿즈 리스트 가져오기 -->
	<select id="selectGoodsListByCri" resultType="kr.inyo.munglog.vo.GoodsVO">
		select goods.*, min(ot_price) as gs_price from goods
			join `option` on goods.gs_num = `option`.ot_gs_num
			<if test = "searchType != ''">
				where ${searchType} like concat('%',#{keyword},'%') 
			</if> 
		  group by gs_num
		  order by gs_reg_date desc
		  limit #{pageStart}, #{perPageNum}
	</select>
	
	<!-- cri로 굿즈 총 개수 가져오기 -->
	<select id="selectGoodsTotalCount" resultType="int">
		select count(*) from goods
			<if test = "searchType != ''">
				where ${searchType} like concat('%',#{keyword},'%') 
			</if>
	</select>
	
	<!-- 카테고리 리스트 가져오기 -->
	<select id="selectCategoryList" resultType="kr.inyo.munglog.vo.CategoryVO">
		select * from category
	</select>
	
	<!-- 굿즈번호로 굿즈 가져오기 -->
	<select id="selectGoods" resultType="kr.inyo.munglog.vo.GoodsVO">
		select goods.*, min(ot_price) as gs_price from goods
			join `option` on goods.gs_num = `option`.ot_gs_num
			where gs_num = #{gs_num}
		  group by gs_num
	</select>
	
	<!-- 굿즈 번호로 옵션 리스트 가져오기 -->
	<select id="selectOptionList" resultType="kr.inyo.munglog.vo.OptionVO">
		select * from `option` where ot_gs_num = #{gs_num} order by ot_price
	</select>
	
	<!-- 회원번호와 옵션 번호로 장바구니 정보 가져오기 -->
	<select id="selectBasketByOtNum" resultType="kr.inyo.munglog.vo.BasketVO">
		select * from basket
			where bs_mb_num = #{bs_mb_num} and bs_ot_num = #{bs_ot_num} and bs_expir_date > now()
	</select>
	
	<!-- 회원 번호로 장바구니 리스트 가져오기 -->
	<select id="selectBasketList" resultType="kr.inyo.munglog.dto.BasketDTO">
		select * from basket
			join `option` on basket.bs_ot_num = `option`.ot_num
    	join goods on `option`.ot_gs_num = goods.gs_num
    	where bs_mb_num = #{mb_num} and bs_expir_date > now();
	</select>
	
	<!-- 장바구니 번호로 장바구니 가져오기 -->
	<select id="selectBasket" resultType="kr.inyo.munglog.vo.BasketVO">
		select * from basket
		where bs_num = #{bs_num} and bs_mb_num = #{bs_mb_num}
	</select>
	
	<!-- 옵션 번호로 주문할 상품들 정보 가져오기 -->
	<select id="selectOrderByOtNum" resultType="kr.inyo.munglog.dto.OrderDTO">
		select * from `option`
   		join goods on `option`.ot_gs_num = goods.gs_num
   		where ot_num = #{otNum} 
	</select>
	
	<!-- 회원번호로 배송지 가져오기 -->
	<select id="selectMainAddress" resultType="kr.inyo.munglog.vo.AddressVO">
		select * from address where ad_mb_num = #{mb_num} and ad_main = "1"
	</select>
	
	<!-- 모든 정보 비교해서 배송지 가져오기 -->
	<select id="selectAddressByAll" resultType="kr.inyo.munglog.vo.AddressVO">
		select * from address
			where ad_mb_num = #{ad_mb_num}
				and ad_recipient = #{ad_recipient}
				and ad_phone = #{ad_phone}
				and ad_post_code = #{ad_post_code}
				and ad_address = #{ad_address}
				and ad_detail = #{ad_detail}
				and ad_main  = #{ad_main}
	</select>
	
	<!-- 배송번호로 배송지 가져오기 -->
	<select id="selectAddress" resultType="kr.inyo.munglog.vo.AddressVO">
	 select * from address where ad_num = #{ad_num} and ad_mb_num = #{ad_mb_num}
	</select>
	
	<!-- 주문번호로 주문 정보 가져오기 -->
	<select id="selectOrderByPayment" resultType="kr.inyo.munglog.vo.OrderVO">
		select * from `order` where or_mb_num = #{or_mb_num} and or_payment = #{or_payment}
	</select>
	
	<!-- 굿즈 리스트 가져오기 -->
	<select id="selectGoodsList" resultType="kr.inyo.munglog.vo.GoodsVO">
		select * from goods
	</select>
	
	<!-- cri로 리뷰 리스트 가져오기 -->
	<select id="selectReviewList" resultType="kr.inyo.munglog.dto.ReviewDTO">
		select review.*, ot_name, gs_num, gs_name, mb_nickname from review
			join orderDetail on review.rv_od_num = orderDetail.od_num
	    join `option` on orderdetail.od_ot_num = `option`.ot_num
	    join `order` on orderdetail.od_or_code = `order`.or_code
			join goods on `option`.ot_gs_num = goods.gs_num
	    join member on `order`.or_mb_num = member.mb_num
	    <if test = "gs_num != 0">
				where gs_num = #{gs_num} 
			</if>
		  order by rv_reg_date desc
		  limit #{pageStart}, #{perPageNum}
	</select>
	
	<!-- cri로 리뷰 총 개수 가져오기 -->
	<select id="selectReviewTotalCount" resultType="int">
		select count(*) from review
			join orderDetail on review.rv_od_num = orderDetail.od_num
	    join `option` on orderdetail.od_ot_num = `option`.ot_num
			join goods on `option`.ot_gs_num = goods.gs_num
			<if test = "gs_num != 0">
				where gs_num = #{gs_num} 
			</if>
	</select>
	
	<!-- 판매가 가장 많은 굿즈 가져오기 -->
	<select id="selectBestGoodsList" resultType="kr.inyo.munglog.vo.GoodsVO">
		select goods.* from orderDetail 
	    join `option` on orderDetail.od_ot_num = `option`.ot_num
	    join goods on `option`.ot_gs_num = goods.gs_num
	    where od_state = "구매확정"
			group by gs_num 
			limit 0, 5;
	</select>
	<!-- insert *********************************************************************************************** -->
	<!-- 장바구니 추가 -->
	 <insert id="insertBasket">
	 	insert into basket(bs_mb_num, bs_ot_num, bs_amount, bs_expir_date)
	 		values(#{bs_mb_num},#{bs_ot_num},#{bs_amount},#{bs_expir_date})
	 </insert>
	 
	<!-- 배송지 추가(기본만) -->
	<insert id="insertAddress">
		insert into address(ad_mb_num, ad_name, ad_recipient, ad_phone, ad_main)
			values(#{member.mb_num},#{ad_name},#{member.mb_name},#{member.mb_phone},#{ad_main})
	</insert> 
	
	<!-- 배송지 추가(모든 정보) -->
	<insert id="insertAddressAll">
		insert into address(ad_mb_num, ad_name, ad_recipient, ad_phone, ad_post_code, ad_address, ad_detail, ad_main, ad_request)
			values(#{ad_mb_num},#{ad_name},#{ad_recipient},#{ad_phone},#{ad_post_code},#{ad_address},#{ad_detail},#{ad_main},#{ad_request})
	</insert>
	
	<!-- 주문 추가 -->
	<insert id="insertOrder">
		insert into `order`(or_code, or_mb_num, or_ad_num, or_payment, or_point_amount, or_pay_amount, or_email)
			values(#{payment.orCode},#{payment.mbNum},#{ad_num},#{payment.imp_uid},#{payment.pointAmount},#{payment.payAmount},#{payment.email})
	</insert>
	
	<!-- 주문 상세 추가 -->
	<insert id="insertOrderDetail">
		insert into orderDetail(od_or_code, od_ot_num, od_amount, od_total_price, od_state)
			values(#{od_or_code}, #{order.otNum}, #{order.orAmount}, #{order.totalPrice}, #{od_state})
	</insert>
	
	<!-- update ************************************************************************************************* -->
	<!-- 배송지 수정 -->
	<update id="updateAddress">
		update address
			set ad_name = #{ad_name},
				ad_recipient = #{ad_recipient},
				ad_phone = #{ad_phone},
				ad_post_code = #{ad_post_code},
				ad_address = #{ad_address},
				ad_detail = #{ad_detail},
				ad_main = #{ad_main},
				ad_request = #{ad_request}
			where ad_num = #{ad_num} and ad_mb_num = #{ad_mb_num}
	</update>
	
	<!-- 장바구니 수정 -->
	<update id="updateBasket">
		update basket
			set bs_ot_num = #{bs_ot_num},
				bs_amount = #{bs_amount}
			where bs_num = #{bs_num} and bs_mb_num = #{bs_mb_num}
	</update>
	
	<!-- delete ************************************************************************************************* -->
	<!-- 장바구니 삭제 -->
	<delete id="deleteBasket">
		delete from basket
			where bs_num = #{bs_num} and bs_mb_num = #{bs_mb_num}
	</delete>
	
	<!-- 보관기간이 지난 장바구니 삭제 -->
	<delete id="deleteExpiredBasket">
		delete from basket
			where bs_mb_num = #{mb_num} and <![CDATA[bs_expir_date <= now()]]>	
	</delete>
	
	<!-- 옵션 번호로 장바구니 삭제 -->
	<delete id="deleteBasketByOtNum">
		delete from basket
			where bs_mb_num = #{mb_num} and bs_ot_num = #{ot_num} and bs_expir_date > now()	
	</delete>
</mapper>